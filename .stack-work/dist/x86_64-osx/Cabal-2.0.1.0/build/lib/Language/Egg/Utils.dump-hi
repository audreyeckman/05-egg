
==================== FINAL INTERFACE ====================
2018-03-08 20:29:19.960156 UTC

interface egg-0.1.0.0-BICRyseCZOgDidKW8MZQAr:Language.Egg.Utils 8022
  interface hash: 05b54452cb15ce4524c57dfd64deb171
  ABI hash: 177642ae9ff45b7a97313efc9643b064
  export-list hash: 71d94caca582c91eb8850847c63b92fc
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: b1e83102aaabde7ee89d57c4de6281db
  sig of: Nothing
  used TH splices: False
  where
exports:
  Language.Egg.Utils.>->
  Language.Egg.Utils.dupBy
  Language.Egg.Utils.ensurePath
  Language.Egg.Utils.executeShellCommand
  Language.Egg.Utils.getRange
  Language.Egg.Utils.groupBy
  Language.Egg.Utils.handleIO
  Language.Egg.Utils.inserts
  Language.Egg.Utils.phase
  Language.Egg.Utils.safeHead
  Language.Egg.Utils.safeReadFile
  Language.Egg.Utils.traceShow
  Language.Egg.Utils.trim
  Language.Egg.Utils.trimEnd
  Language.Egg.Utils.writeLoud
  Language.Egg.Utils.Phase{Language.Egg.Utils.Start Language.Egg.Utils.Stop}
module dependencies:
package dependencies: array-0.5.2.0 base-4.10.1.0 cmdargs-0.10.18
                      containers-0.5.10.2 deepseq-1.4.3.0 directory-1.3.0.2
                      filepath-1.4.1.2 ghc-prim-0.5.1.1 integer-gmp-1.0.1.0
                      process-1.6.1.0 time-1.8.0.2 unix-2.7.2.2
orphans: time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian base-4.10.1.0:GHC.Float
         base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Complex base-4.10.1.0:Data.Either
                         base-4.10.1.0:Data.Functor.Compose base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats containers-0.5.10.2:Data.Map.Internal
                         containers-0.5.10.2:Data.Set.Internal
import  -/  base-4.10.1.0:Control.Exception c134ea327d158f2eebf26e12a1d4ad47
import  -/  base-4.10.1.0:Control.Monad ebed2e8e7444944e0c1d827c6faf40a4
import  -/  base-4.10.1.0:Data.Char fe4e3458190deeac19969ce15e33bed9
import  -/  base-4.10.1.0:Data.Either d7dae5d9bf298dee616e465c14b5d60e
import  -/  base-4.10.1.0:Data.Foldable 9ed87455d68e87ff2b5b8725eae9897e
import  -/  base-4.10.1.0:Data.Functor 2ffda4f936b8f474394d93205750aff3
import  -/  base-4.10.1.0:Data.List 4ab7fa2a1b87502b23af891a384f0506
import  -/  base-4.10.1.0:Data.Maybe 07738c5485acb328136bb15596f8b845
import  -/  base-4.10.1.0:Data.Monoid c0108b166e27f747671c7fe4ffb11019
import  -/  base-4.10.1.0:Debug.Trace d6b92a67d41f66511d3d35c0713fec79
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.IO e261d8b68ccf81a359626fa520b57d1d
import  -/  base-4.10.1.0:GHC.IO.Exception c72758923693d771268bed5d3d52443d
import  -/  base-4.10.1.0:GHC.IO.Handle 5f614cc041d5fa954b0de4d7c73104fe
import  -/  base-4.10.1.0:GHC.IO.Handle.FD ff7d0cb6466e387dd97a071e05fa192a
import  -/  base-4.10.1.0:GHC.IO.IOMode 2f4ee5a150324cf00a91bc1369bfe932
import  -/  base-4.10.1.0:GHC.List e3060fbeb44ce0038e6b4dedf2dd9cf1
import  -/  base-4.10.1.0:GHC.Num 6e1dc5d36d99a802edb39b92bb1923b8
import  -/  base-4.10.1.0:GHC.Show 0a8ce2b5e533d1c2cfb7954e6736be45
import  -/  base-4.10.1.0:GHC.Unicode 49c9de4fffed0d9be65aaeb6a60b757c
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  base-4.10.1.0:System.Exit dfc0230e6f69e5284631635d15ff33dc
import  -/  base-4.10.1.0:System.IO 525805ab19df5e4fe6d8de7dde9cb909
import  -/  base-4.10.1.0:System.Timeout c82aa0f632178ac40cdbfead7ca85f74
import  -/  base-4.10.1.0:Text.Printf 3260e305614fadf610f6d8134e12b571
import  -/  cmdargs-0.10.18:System.Console.CmdArgs.Verbosity d5105187e1565047ecd035d0cf49b187
import  -/  containers-0.5.10.2:Data.Map 938962634b7a30eebc77b8948269128a
import  -/  containers-0.5.10.2:Data.Map.Internal 9c57d7e8180b3d401d116f2112d8715d
import  -/  directory-1.3.0.2:System.Directory 7efb84e3be22f1e9f9472b628843cd87
import  -/  filepath-1.4.1.2:System.FilePath 3751e022be1498b82ed80e7d6465cd1a
import  -/  filepath-1.4.1.2:System.FilePath.Posix e53ce4f7e12552941b411aaefd9d2247
import  -/  ghc-prim-0.5.1.1:GHC.Classes 93e2660065dce9329577e83d76d8f0d4
import  -/  ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
import  -/  process-1.6.1.0:System.Process a8c75295bfaf5f54dccd3871224e84a9
import  -/  process-1.6.1.0:System.Process.Common 9051746e211517bba28e34050b55448e
0b0fdd5061407ce29335309a9c084dbd
  $fShowPhase :: GHC.Show.Show Language.Egg.Utils.Phase
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.Egg.Utils.Phase
                  Language.Egg.Utils.$fShowPhase_$cshowsPrec
                  Language.Egg.Utils.$fShowPhase_$cshow
                  Language.Egg.Utils.$fShowPhase_$cshowList -}
0b0fdd5061407ce29335309a9c084dbd
  $fShowPhase1 :: Language.Egg.Utils.Phase -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Language.Egg.Utils.Phase) (eta :: GHC.Base.String) ->
                 case ds of wild {
                   Language.Egg.Utils.Start
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           Language.Egg.Utils.$fShowPhase4)
                        eta
                   Language.Egg.Utils.Stop
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           Language.Egg.Utils.$fShowPhase2)
                        eta }) -}
bd649cd948473bf7c05fb15173cc5462
  $fShowPhase2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.Egg.Utils.$fShowPhase3) -}
70b90aef15ee8443d11beecdf4c40b32
  $fShowPhase3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Stop"#) -}
3c1dc58e25f058d831cda07dcd6500d7
  $fShowPhase4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.Egg.Utils.$fShowPhase5) -}
13362eff37dd2a3537afb6f042747847
  $fShowPhase5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Start"#) -}
0b0fdd5061407ce29335309a9c084dbd
  $fShowPhase_$cshow :: Language.Egg.Utils.Phase -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.Egg.Utils.Phase) ->
                 case x of wild {
                   Language.Egg.Utils.Start -> Language.Egg.Utils.$fShowPhase4
                   Language.Egg.Utils.Stop -> Language.Egg.Utils.$fShowPhase2 }) -}
0b0fdd5061407ce29335309a9c084dbd
  $fShowPhase_$cshowList ::
    [Language.Egg.Utils.Phase] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Language.Egg.Utils.Phase
                   Language.Egg.Utils.$fShowPhase1) -}
0b0fdd5061407ce29335309a9c084dbd
  $fShowPhase_$cshowsPrec ::
    GHC.Types.Int -> Language.Egg.Utils.Phase -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (ds1 :: Language.Egg.Utils.Phase)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild {
                   Language.Egg.Utils.Start
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           Language.Egg.Utils.$fShowPhase4)
                        eta
                   Language.Egg.Utils.Stop
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           Language.Egg.Utils.$fShowPhase2)
                        eta }) -}
5bafec7b4002992165886da6c834410b
  $tc'Start :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2082749758910400636##
                   8778542133881814133##
                   Language.Egg.Utils.$trModule
                   Language.Egg.Utils.$tc'Start2
                   0#
                   Language.Egg.Utils.$tc'Start1) -}
822f78da31206e59717e2224fc252240
  $tc'Start1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
418d604ec198902f29b69947d80794b6
  $tc'Start2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Language.Egg.Utils.$tc'Start3) -}
a001d25a9c62f927e2e73262bf20ee73
  $tc'Start3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Start"#) -}
04e4f5fea2639602048aae8441955076
  $tc'Stop :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14902535452839497321##
                   15337467327989298455##
                   Language.Egg.Utils.$trModule
                   Language.Egg.Utils.$tc'Stop1
                   0#
                   Language.Egg.Utils.$tc'Start1) -}
155634316ab77e6419cb4aabe50efc0e
  $tc'Stop1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Language.Egg.Utils.$tc'Stop2) -}
0745553d21e8d82edbb4d7c14025af37
  $tc'Stop2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Stop"#) -}
86aac16b9ebcf873657ef83ef680de74
  $tcPhase :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14459208557014847709##
                   6615688093503043378##
                   Language.Egg.Utils.$trModule
                   Language.Egg.Utils.$tcPhase1
                   0#
                   GHC.Types.krep$*) -}
9a5fdde0446ac2dbe74a65f5e51067e5
  $tcPhase1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Language.Egg.Utils.$tcPhase2) -}
9a30cd56ad618ad606c1380650c04d54
  $tcPhase2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Phase"#) -}
5113e2d64bb6bbbed558df45f3ef19a0
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Language.Egg.Utils.$trModule3
                   Language.Egg.Utils.$trModule1) -}
44a6c0811b1af5238d7a0f9c4c9ab314
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Language.Egg.Utils.$trModule2) -}
4b2f3c9577ddfdb150126804a8416f36
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Language.Egg.Utils"#) -}
6041b478a59dc5f991c143b53a49f55c
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Language.Egg.Utils.$trModule4) -}
08a58099805be9008722c33caf851f4f
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("egg-0.1.0.0-BICRyseCZOgDidKW8MZQAr"#) -}
68e3e0353e9ab091ef2dd76dd30804d3
  $wexecuteShellCommand ::
    GHC.IO.FilePath
    -> GHC.Base.String
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.IO.Exception.ExitCode #)
  {- Arity: 4, Strictness: <L,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.IO.FilePath)
                   (w1 :: GHC.Base.String)
                   (ww :: GHC.Prim.Int#)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.Timeout.$wtimeout
                        @ GHC.IO.Exception.ExitCode
                        ww
                        (System.IO.appendFile2
                           @ GHC.IO.Exception.ExitCode
                           w
                           GHC.IO.IOMode.AppendMode
                           (\ (h :: GHC.IO.Handle.Types.Handle)[OneShot]
                              (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                            let {
                              cp :: System.Process.Common.StdStream
                              = System.Process.Common.UseHandle h
                            } in
                            case System.Process.Posix.createProcess_Internal1
                                   System.Process.createProcess3
                                   (System.Process.Common.CreateProcess
                                      (System.Process.Common.ShellCommand w1)
                                      (GHC.Base.Nothing @ GHC.IO.FilePath)
                                      (GHC.Base.Nothing @ [(GHC.Base.String, GHC.Base.String)])
                                      System.Process.Common.Inherit
                                      cp
                                      cp
                                      GHC.Types.False
                                      GHC.Types.False
                                      GHC.Types.False
                                      GHC.Types.False
                                      GHC.Types.False
                                      GHC.Types.False
                                      (GHC.Base.Nothing @ System.Posix.Types.GroupID)
                                      (GHC.Base.Nothing @ System.Posix.Types.UserID)
                                      GHC.Types.False)
                                   s of ds { (#,#) ipv ipv1 ->
                            case System.Process.createProcess2
                                   System.Process.Common.Inherit
                                   ipv of ds16 { (#,#) ipv2 ipv3 ->
                            case System.Process.createProcess2
                                   cp
                                   ipv2 of ds17 { (#,#) ipv4 ipv5 ->
                            case System.Process.createProcess2
                                   cp
                                   ipv4 of ds18 { (#,#) ipv6 ipv7 ->
                            case ipv1 of wild { System.Process.Common.ProcRetHandles ds1 ds2 ds3 ds4 ->
                            case ds4 of ww1 { System.Process.Common.ProcessHandle ww2 ww3 ww4 ->
                            System.Process.$wwaitForProcess ww2 ww3 ww4 ipv6 } } } } } })
                             `cast`
                           (<GHC.IO.Handle.Types.Handle>_R
                            ->_R Sym (GHC.Types.N:IO[0] <GHC.IO.Exception.ExitCode>_R)))
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <GHC.IO.Exception.ExitCode>_R))
                        w2 of ds { (#,#) ipv ipv1 ->
                 (# ipv,
                    case ipv1 of wild {
                      GHC.Base.Nothing -> Language.Egg.Utils.executeShellCommand2
                      GHC.Base.Just v -> v } #) }) -}
d48102187f9c3a31d0781e3a259a07d1
  $wgetRange :: GHC.Prim.Int# -> GHC.Prim.Int# -> [a] -> [a]
  {- Arity: 3, HasNoCafRefs, Strictness: <S,U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (w :: [a]) ->
                 let {
                   y :: GHC.Prim.Int# = GHC.Prim.+# (GHC.Prim.-# ww1 ww) 1#
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# 0# y) of wild {
                   GHC.Types.False -> GHC.Types.[] @ a
                   GHC.Types.True
                   -> let {
                        x :: GHC.Prim.Int# = GHC.Prim.-# ww 1#
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# x 0#) of wild1 {
                        GHC.Types.False
                        -> GHC.List.$wunsafeTake
                             @ a
                             y
                             (Language.Egg.Utils.$wunsafeDrop @ a x w)
                        GHC.Types.True -> GHC.List.$wunsafeTake @ a y w } }) -}
259b2853e3111983a0154c09ffa34b7d
  $wunsafeDrop :: GHC.Prim.Int# -> [a1] -> [a1]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U><S,1*U>,
     Inline: [0] -}
7743f612451e0928c595567790b5c9f8
  (>->) ::
    (a -> Data.Either.Either e b)
    -> (b -> c) -> a -> Data.Either.Either e c
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(S),1*C1(U)><L,1*C1(U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   @ e
                   @ b
                   @ c
                   (f :: a -> Data.Either.Either e b)
                   (g :: b -> c)
                   (eta :: a) ->
                 case f eta of wild {
                   Data.Either.Left l -> Data.Either.Left @ e @ c l
                   Data.Either.Right r -> Data.Either.Right @ e @ c (g r) }) -}
0b0fdd5061407ce29335309a9c084dbd
  data Phase = Start | Stop
53c3a0808f28e7ae122b40d0a569cde7
  dupBy :: GHC.Classes.Ord k => (a -> k) -> [a] -> [[a]]
  {- Arity: 3,
     Strictness: <L,U(A,C(C1(U)),A,A,A,A,A,A)><L,C(U)><S,1*U>,
     Unfolding: (\ @ k
                   @ a
                   ($dOrd :: GHC.Classes.Ord k)
                   (f :: a -> k)
                   (xs :: [a]) ->
                 Language.Egg.Utils.dupBy1
                   @ k
                   @ a
                   (Language.Egg.Utils.groupBy @ k @ a $dOrd f xs)) -}
e4eef6d9e11ae47e442ef30f1ec94e12
  dupBy1 :: [(k, [a])] -> [[a]]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
860dae490b19076fb312aa185615fc1f
  ensurePath :: GHC.IO.FilePath -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.Egg.Utils.ensurePath1
                  `cast`
                (<GHC.IO.FilePath>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
0b521f09bbef5e8b230a09e8706f91ac
  ensurePath1 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,1*U><S,U>,
     Unfolding: (\ (x :: GHC.IO.FilePath)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.FilePath.Posix.$wsplitFileName_
                        x of ww { (#,#) ww1 ww2 ->
                 case ww1 of wild1 {
                   []
                   -> System.Directory.createDirectoryIfMissing3
                        Language.Egg.Utils.ensurePath2
                        eta
                   : ds1 ds2
                   -> System.Directory.createDirectoryIfMissing3
                        (System.Directory.createDirectoryIfMissing_parents
                           (System.FilePath.Posix.dropTrailingPathSeparator wild1))
                        eta } }) -}
a713dbb5c44ef4b9480fa492757be582
  ensurePath2 :: [GHC.IO.FilePath]
  {- Unfolding: (System.Directory.createDirectoryIfMissing_parents
                   Language.Egg.Utils.ensurePath3) -}
8442d9bc4b6a596608486291d7056446
  ensurePath3 :: GHC.IO.FilePath
  {- Unfolding: (System.FilePath.Posix.dropTrailingPathSeparator
                   System.FilePath.Posix.dropFileName1) -}
f7c202d3b97d5331ad46e5e967352fe2
  executeShellCommand ::
    GHC.IO.FilePath
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.IO GHC.IO.Exception.ExitCode
  {- Arity: 4, Strictness: <L,U><L,U><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.Egg.Utils.executeShellCommand1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.IO.Exception.ExitCode>_R)) -}
e8124f75189f4ebd7f981c3646abd191
  executeShellCommand1 ::
    GHC.IO.FilePath
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.IO.Exception.ExitCode #)
  {- Arity: 4, Strictness: <L,U><L,U><S(S),1*U(U)><S,U>, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: GHC.IO.FilePath)
                   (w1 :: GHC.Base.String)
                   (w2 :: GHC.Types.Int)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w2 of ww { GHC.Types.I# ww1 ->
                 Language.Egg.Utils.$wexecuteShellCommand w w1 ww1 w3 }) -}
79468316ce3ad9ed65bcc0cda1babec3
  executeShellCommand2 :: GHC.IO.Exception.ExitCode
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.IO.Exception.ExitFailure
                   Language.Egg.Utils.executeShellCommand3) -}
d4fe5a4ff783b6cf98e63b45967376d7
  executeShellCommand3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 100#) -}
8095eeab8f599f7467f383132f20da80
  getRange :: GHC.Types.Int -> GHC.Types.Int -> [a] -> [a]
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><L,1*U>, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a (w :: GHC.Types.Int) (w1 :: GHC.Types.Int) (w2 :: [a]) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { GHC.Types.I# ww3 ->
                 Language.Egg.Utils.$wgetRange @ a ww1 ww3 w2 } }) -}
ac8844578ff7ee0bb575535bab84885e
  groupBy :: GHC.Classes.Ord k => (a -> k) -> [a] -> [(k, [a])]
  {- Arity: 3,
     Strictness: <L,U(A,C(C1(U)),A,A,A,A,A,A)><L,C(U)><S,1*U>,
     Unfolding: (\ @ k
                   @ a
                   ($dOrd :: GHC.Classes.Ord k)
                   (f :: a -> k)
                   (eta :: [a]) ->
                 letrec {
                   go :: [a] -> Data.Map.Internal.Map k [a] -> [(k, [a])]
                     <join 2> {- Arity: 2, Strictness: <S,1*U><S,U> -}
                   = \ (ds :: [a]) (eta1 :: Data.Map.Internal.Map k [a]) ->
                     case ds of wild {
                       []
                       -> Data.Map.Internal.$fDataMap_go
                            @ k
                            @ [a]
                            (GHC.Types.[] @ (k, [a]))
                            eta1
                       : y ys
                       -> let {
                            k1 :: k = f y
                          } in
                          go
                            ys
                            (Data.Map.Internal.insert
                               @ k
                               @ [a]
                               $dOrd
                               k1
                               (GHC.Types.:
                                  @ a
                                  y
                                  (Data.Map.Internal.findWithDefault
                                     @ k
                                     @ [a]
                                     $dOrd
                                     (GHC.Types.[] @ a)
                                     k1
                                     eta1))
                               eta1) }
                 } in
                 go eta (Data.Map.Internal.Tip @ k @ [a])) -}
7caa90f3fbf46942998243620f27e327
  handleIO ::
    GHC.IO.FilePath
    -> GHC.IO.Exception.IOException
    -> GHC.Types.IO (Data.Either.Either GHC.Base.String a)
  {- Arity: 3,
     Strictness: <L,1*U><L,1*U(1*U,1*U,1*U,1*U,A,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.Egg.Utils.handleIO1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.IO.FilePath>_R
                 ->_R <GHC.IO.Exception.IOException>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Data.Either.Either [GHC.Types.Char] a>_R)) -}
8308efb663e532c5f7f3cebd160ae525
  handleIO1 ::
    GHC.IO.FilePath
    -> GHC.IO.Exception.IOException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either [GHC.Types.Char] a #)
  {- Arity: 3,
     Strictness: <L,1*U><L,1*U(1*U,1*U,1*U,1*U,A,1*U)><S,U>,
     Unfolding: (\ @ a
                   (f :: GHC.IO.FilePath)
                   (e :: GHC.IO.Exception.IOException)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# s,
                    Data.Either.Left
                      @ [GHC.Types.Char]
                      @ a
                      (GHC.CString.unpackAppendCString#
                         Language.Egg.Utils.handleIO3
                         (GHC.Base.++
                            @ GHC.Types.Char
                            f
                            (GHC.CString.unpackAppendCString#
                               Language.Egg.Utils.handleIO2
                               (case e of ww { GHC.IO.Exception.IOError ww1 ww2 ww3 ww4 ww5 ww6 ->
                                GHC.IO.Exception.$w$cshowsPrec3
                                  ww1
                                  ww2
                                  ww3
                                  ww4
                                  ww6
                                  (GHC.Types.[] @ GHC.Types.Char) })))) #)) -}
cba65e758285b811d5ef161d0a14c07e
  handleIO2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (": "#) -}
6f1e0b0e29e8d53049352225274a1588
  handleIO3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Warning: Couldn't open "#) -}
501016fc8d428211d864d6141d24c62f
  inserts ::
    GHC.Classes.Ord k =>
    k
    -> v -> Data.Map.Internal.Map k [v] -> Data.Map.Internal.Map k [v]
  {- Arity: 4,
     Strictness: <L,U(A,C(C1(U)),A,A,A,A,A,A)><S,U><L,U><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ k
                   @ v
                   ($dOrd :: GHC.Classes.Ord k)
                   (k1 :: k)
                   (v1 :: v)
                   (m :: Data.Map.Internal.Map k [v]) ->
                 Data.Map.Internal.insert
                   @ k
                   @ [v]
                   $dOrd
                   k1
                   (GHC.Types.:
                      @ v
                      v1
                      (Data.Map.Internal.findWithDefault
                         @ k
                         @ [v]
                         $dOrd
                         (GHC.Types.[] @ v)
                         k1
                         m))
                   m) -}
89e3c979bc13650b27e80385ef9130f7
  phase ::
    Language.Egg.Utils.Phase -> GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,1*U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Language.Egg.Utils.phase1
                  `cast`
                (<Language.Egg.Utils.Phase>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
2993404e1d810171655e0f579ee50d19
  phase1 ::
    Language.Egg.Utils.Phase
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,1*U><L,U>,
     Unfolding: (\ (p :: Language.Egg.Utils.Phase)
                   (msg :: GHC.Base.String) ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (Language.Egg.Utils.phase4
                      Language.Egg.Utils.phase2
                      (GHC.Types.[] @ Text.Printf.UPrintf)
                      (case p of wild {
                         Language.Egg.Utils.Start -> Language.Egg.Utils.$fShowPhase4
                         Language.Egg.Utils.Stop -> Language.Egg.Utils.$fShowPhase2 })
                      msg)
                   GHC.Types.True) -}
f63796ab7111f132e6d231abf5b90fdd
  phase2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.Egg.Utils.phase3) -}
835994b1d679ea88157c4a98cecdae9d
  phase3 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("**** %s : %s **************************************"#) -}
7ddb96a1d16dc5a37f933c538bf9ad23
  phase4 ::
    GHC.Base.String
    -> [Text.Printf.UPrintf]
    -> [GHC.Types.Char]
    -> [GHC.Types.Char]
    -> [GHC.Types.Char]
  {- Arity: 4, Strictness: <S,1*U><L,U><L,U><L,U>,
     Unfolding: (\ (fmts :: GHC.Base.String)
                   (args :: [Text.Printf.UPrintf])
                   (a1 :: [GHC.Types.Char])
                   (eta :: [GHC.Types.Char]) ->
                 Text.Printf.uprintfs
                   fmts
                   (GHC.List.reverse1
                      @ Text.Printf.UPrintf
                      (GHC.Types.:
                         @ (Text.Printf.ModifierParser, Text.Printf.FieldFormatter)
                         (Language.Egg.Utils.phase5,
                          \ (w2 :: Text.Printf.FieldFormat) ->
                          case w2 of ww { Text.Printf.FieldFormat ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                          case ww7 of ww8 { GHC.Types.C# ww9 ->
                          Text.Printf.$wformatString
                            @ GHC.Types.Char
                            Text.Printf.$fIsCharChar
                            eta
                            ww1
                            ww2
                            ww3
                            ww9 } })
                         (GHC.Types.:
                            @ (Text.Printf.ModifierParser, Text.Printf.FieldFormatter)
                            (Language.Egg.Utils.phase5,
                             \ (w2 :: Text.Printf.FieldFormat) ->
                             case w2 of ww { Text.Printf.FieldFormat ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                             case ww7 of ww8 { GHC.Types.C# ww9 ->
                             Text.Printf.$wformatString
                               @ GHC.Types.Char
                               Text.Printf.$fIsCharChar
                               a1
                               ww1
                               ww2
                               ww3
                               ww9 } })
                            args))
                      (GHC.Types.[] @ Text.Printf.UPrintf))
                   (GHC.Types.[] @ GHC.Types.Char)) -}
e4ed25d88466c5204ddeb4133dd7336d
  phase5 :: [GHC.Types.Char] -> Text.Printf.FormatParse
  {- Arity: 1, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: [GHC.Types.Char]) ->
                 case ds1 of wild {
                   [] -> Text.Printf.errorShortFormat @ Text.Printf.FormatParse
                   : c1 cs
                   -> Text.Printf.FormatParse
                        (GHC.Types.[] @ GHC.Types.Char)
                        c1
                        cs }) -}
47b95c52e45a39ed0c25641be85df833
  safeHead :: a -> [a] -> a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a (def :: a) (ds :: [a]) ->
                 case ds of wild { [] -> def : x ds1 -> x }) -}
62f88a15781318d0e598ca8778ce125f
  safeReadFile ::
    GHC.IO.FilePath
    -> GHC.Types.IO
         (Data.Either.Either GHC.Base.String GHC.Base.String)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.Egg.Utils.safeReadFile1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Data.Either.Either GHC.Base.String GHC.Base.String>_R)) -}
c80d1fc2be561b8652a45dca10cdd7e2
  safeReadFile1 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either GHC.Base.String GHC.Base.String #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (f :: GHC.IO.FilePath)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ (Data.Either.Either GHC.Base.String GHC.Base.String)
                   @ GHC.Exception.SomeException
                   (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    case GHC.IO.Handle.FD.openFile1
                           f
                           GHC.IO.IOMode.ReadMode
                           s of ds1 { (#,#) ipv ipv1 ->
                    case GHC.IO.Handle.Text.hGetContents1
                           ipv1
                           ipv of ds { (#,#) ipv2 ipv3 ->
                    (# ipv2,
                       Data.Either.Right @ GHC.Base.String @ GHC.Base.String ipv3 #) } })
                   (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                      (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    case e1 of wild { GHC.Exception.SomeException e2 $dException1 e3 ->
                    case Data.Typeable.Internal.eqTypeRep
                           @ *
                           @ *
                           @ e2
                           @ GHC.IO.Exception.IOException
                           (GHC.Exception.$p1Exception @ e2 $dException1)
                             `cast`
                           (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N)
                           GHC.IO.Exception.$fExceptionIOException4 of wild1 {
                      GHC.Base.Nothing
                      -> GHC.Prim.raiseIO#
                           @ GHC.Exception.SomeException
                           @ (Data.Either.Either GHC.Base.String GHC.Base.String)
                           wild
                           eta1
                      GHC.Base.Just ds1
                      -> case ds1 of wild2 { Data.Type.Equality.HRefl cobox cobox1 ->
                         Language.Egg.Utils.handleIO1
                           @ GHC.Base.String
                           f
                           e3 `cast` (Sub (Sym cobox1))
                           eta1 } } })
                   eta) -}
212d61be9c775a724c20069b43acec36
  traceShow :: GHC.Show.Show a => GHC.Base.String -> a -> a
  {- Arity: 3, Strictness: <L,1*U(A,1*C1(U),A)><L,U><L,U>,
     Unfolding: (\ @ a
                   ($dShow :: GHC.Show.Show a)
                   (msg :: GHC.Base.String)
                   (x :: a) ->
                 Debug.Trace.trace
                   @ a
                   (Language.Egg.Utils.phase4
                      Language.Egg.Utils.traceShow1
                      (GHC.Types.[] @ Text.Printf.UPrintf)
                      msg
                      (GHC.Show.show @ a $dShow x))
                   x) -}
f11982a35731307bca0488e9d4dba38e
  traceShow1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.Egg.Utils.traceShow2) -}
9dd89f62cb4c1701e04693e3085ee71f
  traceShow2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TRACE: %s = %s"#) -}
443cd8c4cf1a9a93136693278fc6dbb6
  trim :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ (x :: [GHC.Types.Char]) ->
                 GHC.List.reverse1
                   @ GHC.Types.Char
                   (GHC.List.dropWhile
                      @ GHC.Types.Char
                      GHC.Unicode.isSpace
                      (GHC.List.reverse1
                         @ GHC.Types.Char
                         (GHC.List.dropWhile @ GHC.Types.Char GHC.Unicode.isSpace x)
                         (GHC.Types.[] @ GHC.Types.Char)))
                   (GHC.Types.[] @ GHC.Types.Char)) -}
8097983dcebf351bc44347941114ca61
  trimEnd :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ (x :: [GHC.Types.Char]) ->
                 GHC.List.reverse1
                   @ GHC.Types.Char
                   (GHC.List.dropWhile
                      @ GHC.Types.Char
                      GHC.Unicode.isSpace
                      (GHC.List.reverse1
                         @ GHC.Types.Char
                         x
                         (GHC.Types.[] @ GHC.Types.Char)))
                   (GHC.Types.[] @ GHC.Types.Char)) -}
6fd9b1f189dd72756491b66bbdd395fd
  writeLoud :: GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.Egg.Utils.writeLoud1
                  `cast`
                (<GHC.Base.String>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
f456f87894bfa9d19d2a6ea83414a7ba
  writeLoud1 ::
    GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,1*U><S,U>,
     Unfolding: (\ (s :: GHC.Base.String)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.Console.CmdArgs.Verbosity.ref
                        `cast`
                      (Nth:2
                           (Trans
                                (<GHC.IORef.IORef System.Console.CmdArgs.Verbosity.Verbosity>_R
                                 ->_R GHC.Types.N:IO[0]
                                          <System.Console.CmdArgs.Verbosity.Verbosity>_R)
                                (GHC.IORef.N:IORef[0] <System.Console.CmdArgs.Verbosity.Verbosity>_N
                                 ->_R <GHC.Prim.State# GHC.Prim.RealWorld
                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                             System.Console.CmdArgs.Verbosity.Verbosity #)>_R))) of wild { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ System.Console.CmdArgs.Verbosity.Verbosity
                        var#
                        s1 of ds { (#,#) ipv ipv1 ->
                 case ipv1 of wild1 {
                   DEFAULT -> (# ipv, GHC.Tuple.() #)
                   System.Console.CmdArgs.Verbosity.Loud
                   -> case GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             s
                             GHC.Types.True
                             ipv of ds1 { (#,#) ipv2 ipv3 ->
                      GHC.IO.Handle.Internals.wantWritableHandle1
                        @ ()
                        GHC.IO.Handle.hFlush2
                        GHC.IO.Handle.FD.stdout
                        GHC.IO.Handle.Internals.flushWriteBuffer1
                          `cast`
                        (<GHC.IO.Handle.Types.Handle__>_R
                         ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                        ipv2 } } } }) -}
instance GHC.Show.Show [Language.Egg.Utils.Phase]
  = Language.Egg.Utils.$fShowPhase
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

